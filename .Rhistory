library(languageR)
data(package = "languageR")
confint(my_fit)
---
title: "Regression"
author: "Julio Lopez"
date: "`r Sys.Date()`"
output:
html_document:
highlight: pygments
theme: cerulean
toc: yes
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# Regression example
## Simple text
This is a simple, bivariate regression example.
Two plus two equals `r 2 + 2`.
```{r, math_example}
2 + 2
```
Puedes poner TRUE or FALSE para mostrar codigo o no. O mensajes de warning.
```{r, my_setup, echo=TRUE, message=FALSE}
library(languageR)
library(tidyverse)
str(spanish)
```
## Tidy some data
Here we tidy the data. Este codigo sirve para manipular el tamaño del grafico. Me puede servir para los graficos del QP.
```{r, my_plot, fig.align='center', fig.width=5, fig.height=5}
my_data <- spanish %>%
select(., x = X14461gll, y = X14473gll) %>%
filter(., y < 0.06, x < 0.075)
my_data %>%
ggplot(., aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = 'lm')
```
## Model
Here we fit a model.
```{r, my_model}
my_fit <- lm(y ~ x, data = my_data)
summary(my_fit)
```
---
title: "Regression"
author: "Julio Lopez"
date: "`r Sys.Date()`"
output:
html_document:
highlight: pygments
theme: cerulean
toc: yes
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# Regression example
## Simple text
This is a simple, bivariate regression example.
Two plus two equals `r 2 + 2`.
```{r, math_example}
2 + 2
```
Puedes poner TRUE or FALSE para mostrar codigo o no. O mensajes de warning.
```{r, my_setup, echo=TRUE, message=FALSE}
library(languageR)
library(tidyverse)
str(spanish)
```
## Tidy some data
Here we tidy the data. Este codigo sirve para manipular el tamaño del grafico. Me puede servir para los graficos del QP.
```{r, my_plot, fig.align='center', fig.width=5, fig.height=5}
my_data <- spanish %>%
select(., x = X14461gll, y = X14473gll) %>%
filter(., y < 0.06, x < 0.075)
my_data %>%
ggplot(., aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = 'lm')
```
## Model
Here we fit a model.
```{r, my_model}
my_fit <- lm(y ~ x, data = my_data)
summary(my_fit)
```
confint(my_fit)
coefficient(my_fit)
coefficients(my_fit)
